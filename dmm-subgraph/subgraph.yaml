specVersion: 0.0.2
description: DMM is a decentralized protocol for automated token exchange on Ethereum.
repository: https://github.com/dynamic-amm/dmm-subgraph
graft:
  base: QmQJMG4LAfLFJCjnvaambJjyB2P3BpgFefhBxYmFK45gnZ
  block: 55271882
schema:
  file: ./schema.graphql
dataSources:

  - kind: ethereum/contract
    name: DmmStaticFeeFactory
    network: optimism
    source:
      address: '0x1c758af0688502e49140230f6b0ebd376d429be5'
      abi: DmmStaticFeeFactory
      startBlock: 12876459  # contract creation block
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.4
      language: wasm/assemblyscript
      file: ./src/mappings/factory.ts
      entities:   # defines which entities are written to stores
        - Pairs
        - Pools
        - Tokens
      abis:
        - name: DmmStaticFeeFactory
          file: ./abis/DmmStaticFeeFactory.json
        - name: ERC20
          file: ./abis/ERC20.json
        - name: ERC20SymbolBytes
          file: ./abis/ERC20SymbolBytes.json
        - name: ERC20NameBytes
          file: ./abis/ERC20NameBytes.json
      eventHandlers:
        - event: PoolCreated(indexed address,indexed address,address,uint32,uint24,uint256)
          handler: handlePoolCreated
        - event: SetFeeConfiguration(address,uint24)
          handler: handleSetFeeConfiguration



templates:
  - kind: ethereum/contract
    name: Pool
    network: optimism
    source:
      abi: Pool
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.4
      language: wasm/assemblyscript
      file: ./src/mappings/core.ts
      entities:
        - Pool
        - Token
      abis:
        - name: Pool
          file: ./abis/DmmPool.json
        - name: DynamicFeeFactory
          file: ./abis/DmmDynamicFeeFactory.json
        - name: StaticFeeFactory
          file: ./abis/DmmStaticFeeFactory.json
      eventHandlers:
        - event: Mint(indexed address,uint256,uint256)
          handler: handleMint
        - event: Burn(indexed address,uint256,uint256,indexed address)
          handler: handleBurn
        - event: Swap(indexed address,uint256,uint256,uint256,uint256,indexed address,uint256)
          handler: handleSwap
        - event: Transfer(indexed address,indexed address,uint256)
          handler: handleTransfer
        - event: Sync(uint256,uint256,uint256,uint256)
          handler: handleSync

